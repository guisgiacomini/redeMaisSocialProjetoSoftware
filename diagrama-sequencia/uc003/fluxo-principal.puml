@startuml

actor "Representante R+S" as representante
boundary "GUI" as gui <<fronteira>>
control "AfiliacaoController" as afiliacaoController <<controller>>
control "CandidatoController" as candidatoController <<controller>>
control "ONGController" as ongController<<controller>>
control "AprovacaoController" as aprovacaoController<<controller>>
collections "PedidoAfiliacao" as pedidoAfiliacao
collections "Candidatos" as candidatos
collections "Voluntarios" as voluntarios
collections "ONGs" as ongs
collections "Campanhas" as campanhas
collections "Recomendacoes" as recomendacoes
entity "Candidato" as candidato
entity "Voluntario" as voluntario


representante -> gui: buscaCandidatosPendentes()
activate gui

    gui -> afiliacaoController: buscaCandidatosPendentes()
    activate afiliacaoController

        afiliacaoController -> pedidoAfiliacao: buscaCandidatosPendentes()
        activate pedidoAfiliacao

            pedidoAfiliacao -> candidato: getCandidato()
            activate candidato
                
                candidato --> pedidoAfiliacao: Candidato

            deactivate candidato

            pedidoAfiliacao --> afiliacaoController: Candidatos

            deactivate pedidoAfiliacao

        afiliacaoController --> gui: Candidatos
        deactivate afiliacaoController

deactivate gui 


representante -> gui: exibeInformacaoDetalhadaCandidato(id)
activate gui

    gui -> candidatoController: exibeInformacaoDetalhadaCandidato(id)
    activate candidatoController

        candidatoController -> candidatos: buscaCandidato(id)
        activate candidatos

            candidatos -> candidato: get(id)
            activate candidato

                candidato --> candidatos: Candidato

            deactivate candidato
            candidatos --> candidatoController: Candidato

        deactivate candidatos
        candidatoController --> gui: Candidato

    deactivate candidatoController

deactivate gui

representante -> gui: solicitaAprovacaoCandidato(id)
activate gui
    gui -> candidatoController: solicitaAprovacaoCandidato(id)
    activate candidatoController
        candidatoController -> candidatos: buscaCandidato(id)
        activate candidatos
            
            candidatos -> candidato: get(id)
            activate candidato
                candidato --> candidatos: candidato
            deactivate candidato

        candidatos --> candidatoController: candidato
        deactivate candidatos

        candidatoController -> candidatoController: mudaSituacao(candidato)
        candidatoController -> voluntarios: salva(voluntario)

        activate voluntarios
            voluntarios --> candidatoController: voluntario
        deactivate voluntarios

    candidatoController --> gui: voluntario
    deactivate candidatoController
deactivate gui

representante -> gui: solicitaçãoRecomendacaoOngParceira(perfil)
activate gui
    gui -> ongController: solicitaçãoRecomendacaoOngParceira(perfil)
    activate ongController
        ongController -> ongs: filtroONGDeAcordoComPerfil(perfil)
        activate ongs
            ongs --> ongController: ongs
        deactivate ongs
        ongController -> campanhas: procuraCampanhasDeOng(ong)
        activate campanhas
            campanhas --> ongController: campanhas
        deactivate campanhas

        ongController -> ongController: criaRecomendacao(ong, campanha)
        ongController --> gui: recomendação 
    deactivate ongController
deactivate gui

representante -> gui: aprovaVoluntario(idVoluntario, recomendacao)
activate gui
    gui -> aprovacaoController: aprovaVoluntario(idVoluntario, recomendacao)
    activate aprovacaoController
        aprovacaoController -> recomendacoes: salvaRecomendacao(recomendacao)
        activate recomendacoes
            recomendacoes --> aprovacaoController: recomendacao
        deactivate recomendacoes
        aprovacaoController -> voluntarios: procuraVoluntario(idVoluntario)
        activate voluntarios
            voluntarios -> voluntario: get(idVoluntario)
            activate voluntario
                voluntario --> voluntarios: voluntario
            deactivate voluntario
            voluntarios --> aprovacaoController: voluntario
        
        aprovacaoController -> aprovacaoController: geraLoginSenhaVoluntario(voluntario)
        aprovacaoController -> voluntarios: salvaVoluntario(voluntario)
        
        deactivate voluntarios

        aprovacaoController -> aprovacaoController: enviaEmailLoginInstrucao(voluntarioEmail, voluntarioLogin, voluntarioSenha)
        aprovacaoController -> aprovacaoController: enviaEmailResultadoAfiliacaoRecomendacao(voluntarioEmail, recomendacao)

        aprovacaoController --> gui: "successo"
@enduml